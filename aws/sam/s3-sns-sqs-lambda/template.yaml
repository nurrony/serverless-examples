AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Sends notifications from S3 to SQS when an object is created

Parameters:
  SourceBucketName:
    Type: String

Resources:
  ## S3 bucket
  SourceBucket:
    Type: 'AWS::S3::Bucket'
    DependsOn:
      - QueuePolicy
    Properties:
      BucketName: !Ref SourceBucketName
      NotificationConfiguration:
        QueueConfigurations:
          - Event: 's3:ObjectCreated:*'
            Queue: !GetAtt StandardQueue.Arn
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: "CTRRecord"
                  - Name: suffix
                    Value: ".json"

  QueuePolicy:
    Type: 'AWS::SQS::QueuePolicy'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: "s3.amazonaws.com"
            Action:
              - 'SQS:SendMessage'
            Resource: !GetAtt StandardQueue.Arn
            Condition:
              ArnLike:
                aws:SourceArn: !Join ["",['arn:aws:s3:::',!Ref SourceBucketName]]
              StringEquals:
                aws:SourceAccount: !Ref AWS::AccountId
      Queues:
        - !Ref StandardQueue

  DeadLetter:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 # 14 days

  StandardQueue:
    Type: AWS::SQS::Queue
    Properties:
      DelaySeconds: 0
      MessageRetentionPeriod: 259200 # 3 days
      VisibilityTimeout: 60
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt DeadLetter.Arn
        maxReceiveCount: 3 # how many times should a msg be put back into the queue
      Tags:
        - Key: 'Created By'
          Value: Rony

  S3JsonLoggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/s3-json-logger.s3JsonLoggerHandler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 30
      Policies:
        S3ReadPolicy:
          BucketName: !Ref SourceBucketName
      Environment:
        Variables:
          API_URL: https://google.com
          URL_EXPIRE_SECONDS: 300
      Events:
        SqsEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt StandardQueue.Arn
            BatchSize: 10
            Enabled: true
