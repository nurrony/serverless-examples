service: cf-s3-react-site

frameworkVersion: "3"

custom:
  domain-name: ${self:service}.dev.sandbox3000.com
  s3Sync:
    - bucketName: ${self:service}-${self:provider.stage}
      localDir: build/

plugins:
  - serverless-s3-sync

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  runtime: nodejs16.x
  versionFunctions: false
  tags:
    "Created By": Rony
  stackTags:
    "Created By": Rony

resources:
  Resources:
    AppOriginAccessIdentity:
      Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
      Properties:
        CloudFrontOriginAccessIdentityConfig:
          Comment: react app website cloudfront origin access configuration

    AppWebsiteBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref AppWebsiteBucket
        PolicyDocument:
          Id: WebAppWebsiteBucketPolicy
          Version: "2012-10-17"
          Statement:
            - Sid: AppWebsiteBucketPolicy
              Effect: Allow
              Principal: "*"
              Action: s3:GetObject
              Resource:
                Fn::Join:
                  - ""
                  - - !GetAtt AppWebsiteBucket.Arn
                    - "/*"

    AppWebsiteBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-${self:provider.stage}
        AccessControl: Private
        Tags:
          - Key: "Created By"
            Value: Rony
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: false
          IgnorePublicAcls: true
          RestrictPublicBuckets: true
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: index.html

    AppDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        Tags:
          - Key: "Created By"
            Value: Rony
        DistributionConfig:
          Origins:
            - DomainName:
                Fn::Join:
                  - ""
                  - - !Ref AppWebsiteBucket
                    - ".s3.amazonaws.com"
              Id: AppWebsiteBucketBucketOrigin
              S3OriginConfig:
                OriginAccessIdentity:
                  Fn::Join:
                    - ""
                    - - origin-access-identity/cloudfront/
                      - !Ref AppOriginAccessIdentity
          Enabled: "true"
          Comment: React App Cloudfront site
          CustomErrorResponses:
            - ErrorCode: 403
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCode: 400
              ResponseCode: 200
              ResponsePagePath: /index.html
            - ErrorCachingMinTTL: 0
              ErrorCode: 404
              ResponseCode: 200
              ResponsePagePath: /index.html
          DefaultRootObject: index.html
          DefaultCacheBehavior:
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            Compress: "true"
            TargetOriginId: AppWebsiteBucketBucketOrigin
            ForwardedValues:
              QueryString: "true"
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            CloudFrontDefaultCertificate: true

  Outputs:
    AppWebsiteBucket:
      Description: Player bucket name
      Value: !Ref AppWebsiteBucket
    AppDistribution:
      Value: !Ref AppDistribution
      Description: CloudFront DistributionId
    AppUrl:
      Value: !Join
        - ""
        - - "https://"
          - !GetAtt AppDistribution.DomainName
      Description: URL of website CDN
